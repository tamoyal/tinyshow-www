<!DOCTYPE html>
<html>
<head>
  <title>TinyShow for Creators</title>
  <link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
  <link rel="stylesheet" type="text/css" href="/css/connect.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js"></script>
  <script type="text/javascript" src="/js/tinyshow.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/mustache.js/2.2.1/mustache.min.js"></script>
</head>
<body>
<script type="text/javascript">
  $(function() {
    $('#confirmForm').on('submit', function(e) {
      e.preventDefault();
      $.ajax({
        url: $(this).attr('action'),
        data: $(this).serialize(),
        type: "POST",
        dataType: "json",
        success: function(response) {
          console.log(response);
        },
        error: function(xhr, textStatus, errorThrown) {
          console.log(errorThrown);
        }
      });
    });
  });

  // This is called with the results from from FB.getLoginStatus().
  function statusChangeCallback(response) {
    if (response.status === 'connected') {
      // Logged into your app and Facebook.
      loggedIn();
    } else if (response.status === 'not_authorized') {
      // The person is logged into Facebook, but not your app.
      console.log("not_authorized");
    } else {
      // The person is not logged into Facebook, so we're not sure if
      // they are logged into this app or not.
      console.log("not logged into facebook");
    }
  }

  // This function is called when someone finishes with the Login
  // Button.  See the onlogin handler attached to it in the sample
  // code below.
	function checkLoginState() {
		FB.getLoginStatus(function(response) {
			statusChangeCallback(response);
		});
	}

  window.fbAsyncInit = function() {
	  FB.init({
	    appId      : '847945558672954',
	    cookie     : true,  // enable cookies to allow the server to access 
	                        // the session
	    xfbml      : true,  // parse social plugins on this page
	    version    : 'v2.5' // use graph api version 2.5
	  });

	  // Now that we've initialized the JavaScript SDK, we call 
	  // FB.getLoginStatus().  This function gets the state of the
	  // person visiting this page and can return one of three states to
	  // the callback you provide.  They can be:
	  //
	  // 1. Logged into your app ('connected')
	  // 2. Logged into Facebook, but not your app ('not_authorized')
	  // 3. Not logged into Facebook and can't tell if they are logged into
	  //    your app or not.
	  //
	  // These three cases are handled in the callback function.

	  FB.getLoginStatus(function(response) {
	    statusChangeCallback(response);
	  });
  };

  // Load the SDK asynchronously
  (function(d, s, id) {
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) return;
    js = d.createElement(s); js.id = id;
    js.src = "http://connect.facebook.net/en_US/sdk.js";
    fjs.parentNode.insertBefore(js, fjs);
  }(document, 'script', 'facebook-jssdk'));

  function loggedIn() {
    TinyShowFacebookApi.getCurrentUserProfile(function(facebookUser) {
      addUserProfileHTML(facebookUser);
      TinyShowFacebookApi.getPagesList(function(facebookPages){
        facebookUser.pages = facebookPages;
        addPagesHTML(facebookPages);
        prefillForm(facebookUser);
        $("#confirmationFormContainer").show();
      });
    });
  }

  function prefillForm(user) {
    $("#firstName").val(user.firstName);
    $("#lastName").val(user.lastName);
    $("#email").val(user.email);

    var facebookUserInputs = Mustache.render('\
      <input\
        type="hidden"\
        name="user[facebook_graph_payload]"\
        value="{{originalPayloadJSON}}">\
      <input\
        type="hidden"\
        name="user[facebook_access_token]"\
        value="{{accessToken}}">', user);
    $("#confirmForm").append(facebookUserInputs);
  }

  function addPagesHTML(facebookPages) {
    var pieces = [];
    for (var i=0; i<facebookPages.length; i++) {
      var html = Mustache.render('\
        <li>\
          <div class="vCenter checkbox">\
            <label>\
              <input\
                name="facebookPages[{{id}}]"\
                value="{{originalPayloadJSON}}"\
                type="checkbox">\
              <img src="{{pictureUrl}}" />\
              <div style="display: inline;">{{page.name}}</div>\
            </label>\
          </div>\
        </li>', facebookPages[i]);
      pieces.push(html);
    }
    $("#pageList").html(pieces.join(""));
  }

  function addUserProfileHTML(user) {
    $("#fbLogin").hide();
    var html = Mustache.render('\
      <img src="{{pictureUrl}}" />\
      <div class="logged-in-name">\
        Logged in as: <span class="blue">{{fullName}}</span>\
      </div>', user);
    $("#loggedInUserSpot").html(html);
  }
</script>

<div id="container">
  <div id="title">TinyShow Connect</div>
  <div id="slogan">
    Connect your <span class="blue">Facebook</span> events to the TinyShow App
  </div>

  <div class="loginBox">
    <div id="fbLogin">
      LOGIN TO SELECT YOUR FACEBOOK PAGE:
      <fb:login-button
        data-size="large"
        scope="public_profile,email,pages_show_list,user_events,rsvp_event"
        onlogin="checkLoginState();">
      </fb:login-button>
    </div>
    <div id="loggedInUserSpot" class="pull-right"></div>
    <div class="spacer" style="clear: both;"></div>
  </div>

  <div id="confirmationFormContainer" style="display: none;">
    <div class="confirm-title">Please confirm your information</div>
    <div>
      *We review every account so please ensure the email below is correct. Phone helps in case we have trouble reaching you via email.
    </div>
    <form id="confirmForm" action="/users" method="POST">
      <div class="form-group">
        <label for="firstName">First Name</label>
        <input
          id="firstName"
          name="user[first_name]"
          type="text"
          class="form-control"
          placeholder="First Name">
      </div>
      <div class="form-group">
        <label for="lastName">Last Name</label>
        <input
          id="lastName"
          name="user[last_name]"
          type="text"
          class="form-control"
          placeholder="Last Name">
      </div>
      <div class="form-group">
        <label for="email">Email address</label>
        <input
          id="email"
          name="user[email]"
          type="email"
          class="form-control"
          placeholder="Email">
      </div>
      <div class="form-group">
        <label for="phone">Phone</label>
        <input
          id="phone"
          name="user[phone]"
          type="phone"
          class="form-control"
          placeholder="Phone">
      </div>
      <label>Where should we pull events from?</label>
      <div class="vCenter checkbox">
        <label>
          <input
            name="user[get_events_from_user_fb_account]"
            value="true"
            type="checkbox">
          <div style="display: inline;">Pull events from my user account</div>
        </label>
      </div>
      <div>Select pages:</div>
      <ul id="pageList"></ul>
      <button type="submit" class="btn btn-default">Confirm</button>
    </form>
  </div>
</div>

</body>
</html>
