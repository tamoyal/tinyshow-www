<!DOCTYPE html>
<html>
<head>
  <title>TinyShow for Creators</title>
  <link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
  <link rel="stylesheet" type="text/css" href="/css/connect.css">
</head>
<body>
<script type="text/javascript" src="/js/tinyshow.js"></script>
<script type="text/javascript">
  var currentFacebookUser = null;

  // This is called with the results from from FB.getLoginStatus().
  function statusChangeCallback(response) {
    // The response object is returned with a status field that lets the
    // app know the current login status of the person.
    // Full docs on the response object can be found in the documentation
    // for FB.getLoginStatus().
    if (response.status === 'connected') {
      // Logged into your app and Facebook.
      testAPI();
    } else if (response.status === 'not_authorized') {
      // The person is logged into Facebook, but not your app.
      console.log("not_authorized");
    } else {
      // The person is not logged into Facebook, so we're not sure if
      // they are logged into this app or not.
      console.log("not logged into facebook");
    }
  }

  // This function is called when someone finishes with the Login
  // Button.  See the onlogin handler attached to it in the sample
  // code below.
	function checkLoginState() {
		FB.getLoginStatus(function(response) {
			statusChangeCallback(response);
		});
	}

  window.fbAsyncInit = function() {
	  FB.init({
	    appId      : '847945558672954',
	    cookie     : true,  // enable cookies to allow the server to access 
	                        // the session
	    xfbml      : true,  // parse social plugins on this page
	    version    : 'v2.5' // use graph api version 2.5
	  });

	  // Now that we've initialized the JavaScript SDK, we call 
	  // FB.getLoginStatus().  This function gets the state of the
	  // person visiting this page and can return one of three states to
	  // the callback you provide.  They can be:
	  //
	  // 1. Logged into your app ('connected')
	  // 2. Logged into Facebook, but not your app ('not_authorized')
	  // 3. Not logged into Facebook and can't tell if they are logged into
	  //    your app or not.
	  //
	  // These three cases are handled in the callback function.

	  FB.getLoginStatus(function(response) {
	    statusChangeCallback(response);
	  });
  };

  // Load the SDK asynchronously
  (function(d, s, id) {
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) return;
    js = d.createElement(s); js.id = id;
    js.src = "http://connect.facebook.net/en_US/sdk.js";
    fjs.parentNode.insertBefore(js, fjs);
  }(document, 'script', 'facebook-jssdk'));

  function getPagesList() {
    FB.api('/me/accounts', function(response) {
      var pages = response.data;
      for (var i=0; i<pages.length; i++) {
        var pageJSON = pages[i];
        var page = new FacebookPage(pageJSON);
        currentFacebookUser.pages.push(page);
        setupUI();        
      }
    });
  }

  function setupUI() {
    var html = [];
    for (var i=0; i<currentFacebookUser.pages.length; i++) {
      var page = currentFacebookUser.pages[i];
      var pageListHtml = "<li>" +
            "<div class=\"vCenter checkbox\">" +
              "<label>" +
                "<input value=\""+page.id+"\" type=\"checkbox\">" +
                "<img src=\""+page.pictureUrl+"\" />" +
                "<div style=\"display: inline;\">" + page.name + "</div>" +
              "</label>" +
            "</div>" +
        "</li>";
      html.push(pageListHtml);
    }
    document.getElementById("pageList").innerHTML = html.join("");
    document.getElementById("firstName").value = currentFacebookUser.firstName;
    document.getElementById("lastName").value = currentFacebookUser.lastName;
    document.getElementById("email").value = currentFacebookUser.email;
    document.getElementById("confirmationFormContainer").style.display = "block";
  }

  // Here we run a very simple test of the Graph API after login is
  // successful.  See statusChangeCallback() for when this call is made.
  function testAPI() {
	  FB.api('/me?fields=email,name,first_name,last_name', function(response) {
      currentFacebookUser = new FacebookUser(response);
      setLoggedInState();
      getPagesList();
	  });
  }

  function setLoggedInState() {
    document.getElementById("fbLogin").style.display = "none";
    var html = "<img src=\""+currentFacebookUser.pictureUrl+"\" />" +
      "<div class=\"logged-in-name\">Logged in as: <span class=\"blue\">"+currentFacebookUser.fullName+"</span></div>";
    document.getElementById("loggedInUserSpot").innerHTML = html;
  }
</script>
  <div id="container">
    <div id="title">TinyShow Connect</div>
    <div id="slogan">Connect your <span class="blue">Facebook</span> events to the TinyShow App</div>

    <div class="loginBox">
      <div id="fbLogin">
        LOGIN TO SELECT YOUR FACEBOOK PAGE:
        <fb:login-button
          data-size="large"
          scope="public_profile,email,pages_show_list"
          onlogin="checkLoginState();">
        </fb:login-button>
      </div>
      <div id="loggedInUserSpot" class="pull-right">
      </div>
      <div class="spacer" style="clear: both;"></div>
    </div>

    <div id="confirmationFormContainer" style="display: none;">
      <div class="confirm-title">Please confirm your information</div>
      <form id="confirmForm">
        <div class="form-group">
          <label for="firstName">First Name</label>
          <input type="text" class="form-control" id="firstName" placeholder="First Name">
        </div>
          <div class="form-group">
          <label for="lastName">Last Name</label>
          <input type="text" class="form-control" id="lastName" placeholder="Last Name">
        </div>
        <div class="form-group">
          <label for="email">Email address</label>
          <input type="email" class="form-control" id="email" placeholder="Email">
        </div>
        <label>Select which pages you'd like us to pull events from:</label>
        <ul id="pageList"></ul>
        <button type="submit" class="btn btn-default">Confirm</button>
      </form>
    </div>
  </div>

</body>
</html>
